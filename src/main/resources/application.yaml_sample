topic:
  name: testTopic
  partitions-num: 2
  replication-factor: 1
server:
  port: 9090
spring:
  kafka:
    topics: testTopic

    bootstrap-servers:
      #      - localhost:11091
      # - kafka.heinzx.ca:9092
      - localhost:9092
    properties:
      schema.registry.url: http://localhost:8081
      #schema.registry.url: http://schemaregistry.heinzx.ca:80
      #      schema.registry.url: http://ab818d650e5b648be8429d6e83d837fb-1816470654.us-east-2.elb.amazonaws.com:80
      schema.registry.ssl.truststore.location: /Users/heinz/opt/CP_Demo/cp-demo/scripts/security/kafka.schemaregistry.truststore.jks
      schema.registry.ssl.truststore.password: confluent
      schema.registry.ssl.keystore.location: /Users/heinz/opt/CP_Demo/cp-demo/scripts/security/kafka.schemaregistry.keystore.jks
      schema.registry.ssl.keystore.password: confluent
      basic.auth.credentials.source: USER_INFO
      #basic.auth.user.info: appSA:appSA
      basic.auth.user.info: test:test123
      #basic.auth.user.info: superUser:superUser
      #      basic.auth.user.info: admin:Developer1
      #      kafkastore.security.protocol: SASL_SSL


      #schema.registry.basic.auth.user.info: schemaregistryUser:schemaregistryUser
      #      schema.registry.basic.auth.user.info: superUser:superUser


      ssl.truststore.location: /Users/heinz/opt/CP_Demo/cp-demo/scripts/security/kafka.appSA.truststore.jks
      ssl.truststore.password: confluent
      ssl.keystore.location: /Users/heinz/opt/CP_Demo/cp-demo/scripts/security/kafka.appSA.keystore.jks
      ssl.key.password: confluent
      #      security.protocol: SSL
      security.protocol: PLAINTEXT
      ssl.keystore.password: confluent





    consumer:
      group-id: interceptor-app
      auto-offset-reset: latest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: io.confluent.kafka.serializers.json.KafkaJsonSchemaDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
        #        confluent.monitoring.interceptor.security.protocol: SSL
        confluent.monitoring.interceptor.security.protocol: PLAINTEXT
        confluent.monitoring.interceptor.ssl.truststore.location: /Users/heinz/opt/CP_Demo/cp-demo/scripts/security/kafka.appSA.truststore.jks
        confluent.monitoring.interceptor.ssl.truststore.password: confluent
        confluent.monitoring.interceptor.ssl.keystore.location: /Users/heinz/opt/CP_Demo/cp-demo/scripts/security/kafka.appSA.keystore.jks
        confluent.monitoring.interceptor.ssl.keystore.password: confluent
        confluent.monitoring.interceptor.ssl.key.password: confluent

    producer:
    #  key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      key-serializer: io.confluent.kafka.serializers.IntegerSerializer
#      value-serializer: io.confluent.kafka.serializers.json.KafkaJsonSchemaSerializer
      properties:
        interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
        #        confluent.monitoring.interceptor.security.protocol: SSL
        confluent.monitoring.interceptor.security.protocol: PLAINTEXT
        confluent.monitoring.interceptor.ssl.truststore.location: /Users/heinz/opt/CP_Demo/cp-demo/scripts/security/kafka.appSA.truststore.jks
        confluent.monitoring.interceptor.ssl.truststore.password: confluent
        confluent.monitoring.interceptor.ssl.keystore.location: /Users/heinz/opt/CP_Demo/cp-demo/scripts/security/kafka.appSA.keystore.jks
        confluent.monitoring.interceptor.ssl.keystore.password: confluent
        confluent.monitoring.interceptor.ssl.key.password: confluent

    template:
      default-topic:

logging:
  level:
    root: info